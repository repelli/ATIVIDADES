#include<Arduino.h>
#include"BluetoothSerial.h"

#define pinLed 2

BluetoothSerial SerialBT;



void setup(){

Serial.begin(9600);
pinMode(pinLed,OUTPUT);
SerialBT.begin("ESPFER_M",true);
if(SerialBT.connect("ESPFER_S")) //nome remoto de quem eu quero conectar("Desktop ") --> nome do computador, etc ("NOTE16-S10")
 {
   Serial.print("Conectado com sucesso");

 } else
    {

	Serial.print("Deu ruim");
	while(true); //trava o esp

	}


}

void loop()
{

 SerialBT.print("Ping");
 Serial.println("Enviado a mensagem");

unsigned long timeout=millis()+1000;//espera a resposta em 1 segundo senão envia novamente
while(millis() < timeout)
{

 if(SerialBT.available()) //verifica se tem algo no buffer
{

String resposta = SerialBT.readStringUntil('\r');
Serial.printf("Resposta %s\n\n",resposta);

break;

if (resposta.equals("liga"))
 {
  Serial.printf("liga");
  digitalWrite(pinLed,HIGH);
  Serial.print("Teste");

 }
}



}
}
/*

char digitalRead(entrada[]);

if (entrada == liga)
  acende led
if(entrada == desliga)

  desliga led

 */







#include <Arduino.h>
#include "BluetoothSerial.h"

#define pinLed   2

BluetoothSerial SerialBT; //cria o objeto


//ESP SLAVE- não conecta só passivo, se conecta a alguem
void setup() {

Serial.begin(9600);
SerialBT.begin("ESPFER_S");
pinMode(pinLed,OUTPUT);

Serial.println("Esperando conexão Bluetooth....");


}

void loop() {

  bool estadoLed = false;

if(SerialBT.available()) //se tiver alguma coisa no buffer

{
String mensagem = SerialBT.readStringUntil('\n');
mensagem.trim();
Serial.printf("Mensagem Recebida %s\n",mensagem);

 if (mensagem.equals("liga"))
 {
  Serial.printf("mensagem recebida: liga");

  estadoLed = !estadoLed;
 

}else if(mensagem.equals("desliga"))
{
Serial.printf("mensagem recebida: desliga");

  digitalWrite(pinLed,LOW);

}else if(mensagem.equals("pisca"))
{

} /*else {

  SerialBT.print("Comando não reconhecido");
}
*/
}



}



