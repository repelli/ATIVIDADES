 Tabela ASC aperta o ALT + o número do caractere.
 º § ÷ } ~ ç º §  ¢¹¬ ²£ ² ³²£ ²£¢2 ¸  Ņ
☺ ☻ ♥ ♦ ♣ ♠ • ◘ ○ ◙ ♂ ♀ ♪ ♫ ☼ ► ◄ ↕ ‼ ¶ § ▬ ↨ ↑ ↓ → ← ∟ ↔ ▲ ▼  

UTILIZAÇÃO DE MEMÓRIA.

Variáveis -- TIPOS.

char --> 1 byte --> -128 - 127 / 0 - 255
unsigned char --> 1 byte --> 0 - 255
signed char -->  1 byte --> 128 - 127
int 2 ou 4 bytes --> -32768.... - 32767 / -2147 ..... - 2.147...(64bits)
unsigned int --> 2 ou 4 bytes --> 0 - 65535 / 0 4.294 (64 bits)
short -->  2 bytes --> -32768 - 32767
unsigned short --> 2 bytes --> 0 - 65535
long --> 4 bytes --> -2147483648 ... 2147483647
unsigned long --> 4 bytes --> 0 - 4294967295


-------------------------------------------------------------
// 
//
int numero = 400  ; //= --> recebe
  
void setup()
{
  //inicia o serial com a velocidade de comunicação 9600
  Serial.begin(9600); 
 // Serial.println("Ola mundo \n \r"); // pula a linha ou com \n ao contrário
 // Serial.print("Senai \n");
  Serial.print("A variavel contem: ");
  Serial.println(numero);
  Serial.print("A variavel contem agora: ");
  numero = 32768;
  Serial.print(numero);
  
}

void loop()
{
  
}




ver overflow de boleto

erro 2y38

o máximo do Arduino e 32 bits ou 4 Bytes.




TESTANDO VARIAVEIS.
--------------------
// 
//
unsigned int numero = 400  ; //= --> recebe
char teste = 49;  
void setup()
{
  //inicia o serial com a velocidade de comunicação 9600
  //Serial.begin(9600); 
 // Serial.println("Ola mundo \n \r"); // pula a linha ou com \n ao contrário
 // Serial.print("Senai \n");
  //Serial.print("A variavel contem: ");
  //Serial.println(numero);
  //Serial.print("A variavel contem agora: ");
  //numero = 32769;
  //Serial.println(numero);
  Serial.begin(9600);
  Serial.println("Tamanhos dos tipos de variaveis em bytes ");
 // Serial.print(sizeof(numero));
 //so aceita 0 e 1
  Serial.print( "Bool:  "); Serial.println(sizeof(bool));
 //aceita letras da tabela ASC, nao ha negativo de 0 a 255 caracter
  Serial.print( "Char:  "); Serial.println(sizeof(char));
  //Escreve ate  ou 0 255
  Serial.print( "Byte:  "); Serial.println(sizeof(byte));
 //e sinalizado implicito de -32.768 a 32.767
    Serial.print( "Int:  "); Serial.println(sizeof(int));
  // a sinalizacao e explicita de 0 a 65.535
  Serial.print( "Unsiged int:  "); Serial.println(sizeof(unsigned int));
  // vai de -2.147.483.648 a 2.147.438.647
  Serial.print( "Long:  "); Serial.println(sizeof(long));
  //vai de 0 4.294.967.295
  Serial.print( "Unsigned long:  "); Serial.println(sizeof(unsigned long));
  //+1.175494 * 10^-38
  //- 1.175494 * 10^-38 
  //+3,4028235*10^+38 
  //-3,4028235*10^+38 aceitando virgulas
  Serial.print( "Float:  "); Serial.println(sizeof(float));
  // vai de -2.147.483.648 a 2.147.438.647
  Serial.print( "Double:  "); Serial.println(sizeof(double));
  
  Serial.println(teste);
  
}

void loop()
{
  
}

-------------------------------------------------------------------------------
//no Arduino so podemos utilizar ate 32 bits.
----------------------------------------------------------------------------------

// 
//
unsigned int numero = 400  ; //= --> recebe
int64_t teste = 49;  
void setup()
{
  
  Serial.begin(9600);
  Serial.println("Tamanhos dos tipos de variaveis em bytes ");
 
  
  
   Serial.print( "int8_t:  "); Serial.println(sizeof(int8_t));
   Serial.print( "uint8_t:  "); Serial.println(sizeof(uint8_t));
  
  
  
   Serial.print( "int16_t:  "); Serial.println(sizeof(int16_t));
   Serial.print( "uint16_t:  "); Serial.println(sizeof(uint16_t));
  
  
   Serial.print( "int32_t:  "); Serial.println(sizeof(int32_t));
   Serial.print( "uint32_t:  "); Serial.println(sizeof(uint32_t));
  
  
   Serial.print( "int64_t:  "); Serial.println(sizeof(int64_t));
   Serial.print( "uint64_t:  "); Serial.println(sizeof(uint64_t));
  
   Serial.print( sizeof(teste)); 
 
  
}

void loop()
{
  
}


